openapi: 3.0.0
info:
  title: Navigation Device Travel Registration System
  version: "1.0"
  description: |
    A system that allows navigation devices to register trips. Clients can register by providing personal details and their vehicles.

paths:
  /clients:
    put:
      summary: Register a new client
      description: |
        Allows a client to register in the system by providing their name, surname, email, and date of birth.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: Client's first name
                lastName:
                  type: string
                  description: Client's last name
                email:
                  type: string
                  format: email
                  description: Client's email address
                birthDate:
                  type: string
                  format: date
                  description: Client's date of birth in YYYY-MM-DD format
              required:
                - firstName
                - lastName
                - email
                - birthDate
            example:
              firstName: "Jonas"
              lastName: "Kazlauskas"
              email: "jonas.kazlauskas@example.com"
              birthDate: "1990-05-12"
      responses:
        "201":
          description: Client registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Client registered successfully"
        "400":
          description: Invalid input. Required fields may be missing or incorrectly formatted
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: "Invalid input. Ensure all required fields are provided."

  /clients/{clientId}:
    get:
      summary: Get client details
      description: |
        Retrieves the details of a specific client by their unique identifier (clientId).
      parameters:
        - name: clientId
          in: path
          required: true
          description: The unique identifier of the client
          schema:
            type: string
      responses:
        "200":
          description: Client details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                    format: email
                  birthDate:
                    type: string
                    format: date
                example:
                  id: 123
                  firstName: "Jonas"
                  lastName: "Kazlauskas"
                  email: "jonas.kazlauskas@example.com"
                  birthDate: "1990-05-12"
        "404":
          description: Client not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: "Client not found"
        "400":
          description: Invalid client identifier format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: "Invalid client identifier format"

  /vehicles:
    put:
      summary: Register a new vehicle
      description: |
        Allows clients to register their vehicles by providing details such as model, manufacturer, license plate, VIN, and year of manufacture.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  description: Vehicle's model
                manufacturer:
                  type: string
                  description: Vehicle's manufacturer
                licensePlate:
                  type: string
                  description: Vehicle's license plate number
                vin:
                  type: string
                  description: Vehicle Identification Number (VIN)
                year:
                  type: integer
                  format: int32
                  description: Year the vehicle was manufactured
              required:
                - model
                - manufacturer
                - licensePlate
                - vin
                - year
            example:
              model: "Model S"
              manufacturer: "Tesla"
              licensePlate: "ABC123"
              vin: "5YJSA1E26MF123456"
              year: 2020
      responses:
        "201":
          description: Vehicle registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Vehicle registered successfully"
        "400":
          description: Invalid input. Required fields may be missing or incorrectly formatted
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: "Invalid input. Ensure all required fields are provided."

  /journeys:
    post:
      summary: Start a new journey
      description: |
        Starts a new journey for a specified vehicle. The device will periodically log vehicle coordinates during the journey.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicleId:
                  type: string
                  description: The identifier of the vehicle starting the journey
                intervalInSeconds:
                  type: integer
                  minimum: 5
                  description: Interval (in seconds) between logging vehicle coordinates (must be at least 5 seconds)
              required:
                - vehicleId
                - intervalInSeconds
            example:
              vehicleId: "vehicle-123"
              intervalInSeconds: 10
      responses:
        "201":
          description: Journey started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  journeyId:
                    type: string
                    description: The identifier of the started journey
                example:
                  journeyId: "journey-456"
        "400":
          description: Invalid input data

  /journeys/{journeyId}/coordinates:
    post:
      summary: Log coordinates for an ongoing journey
      description: |
        Logs the current coordinates of the vehicle for the specified journey. This endpoint is called at the interval specified during journey creation.
      parameters:
        - name: journeyId
          in: path
          required: true
          description: The unique identifier of the journey
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: float
                  description: Current latitude of the vehicle
                longitude:
                  type: number
                  format: float
                  description: Current longitude of the vehicle
                timestamp:
                  type: string
                  format: date-time
                  description: Timestamp of the logged position
              required:
                - latitude
                - longitude
                - timestamp
            example:
              latitude: 54.6872
              longitude: 25.2797
              timestamp: "2024-12-13T12:34:56Z"
      responses:
        "200":
          description: Coordinates logged successfully
        "404":
          description: Journey not found
        "400":
          description: Invalid input data

  /journeys/{journeyId}/complete:
    post:
      summary: Mark a journey as completed
      description: |
        Marks the specified journey as completed. Once completed, no further positions can be logged for the journey.
      parameters:
        - name: journeyId
          in: path
          required: true
          description: The unique identifier of the journey
          schema:
            type: string
      responses:
        "200":
          description: Journey marked as completed
        "404":
          description: Journey not found

  /journeys/{journeyId}:
    get:
      summary: View journey details
      description: |
        Retrieves the details of a specific journey, including all logged positions and timestamps.
      parameters:
        - name: journeyId
          in: path
          required: true
          description: The unique identifier of the journey
          schema:
            type: string
      responses:
        "200":
          description: Journey details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  journeyId:
                    type: string
                  vehicleId:
                    type: string
                  positions:
                    type: array
                    items:
                      type: object
                      properties:
                        latitude:
                          type: number
                          format: float
                        longitude:
                          type: number
                          format: float
                        timestamp:
                          type: string
                          format: date-time
                  startedAt:
                    type: string
                    format: date-time
                  completedAt:
                    type: string
                    format: date-time
                example:
                  journeyId: "journey-456"
                  vehicleId: "vehicle-123"
                  positions:
                    - latitude: 54.6872
                      longitude: 25.2797
                      timestamp: "2024-12-13T12:34:56Z"
                    - latitude: 54.6891
                      longitude: 25.2819
                      timestamp: "2024-12-13T12:35:01Z"
                  startedAt: "2024-12-13T12:34:00Z"
                  completedAt: "2024-12-13T13:00:00Z"
        "404":
          description: Journey not found

  /journeys/{journeyId}/duration:
    get:
      summary: Get journey duration
      description: |
        Calculates and returns the total duration of the journey in seconds.
      parameters:
        - name: journeyId
          in: path
          required: true
          description: The unique identifier of the journey
          schema:
            type: string
      responses:
        "200":
          description: Journey duration retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  journeyId:
                    type: string
                  durationInSeconds:
                    type: integer
                example:
                  journeyId: "journey-456"
                  durationInSeconds: 1560
        "404":
          description: Journey not found

  /journeys/{journeyId}/distance:
    get:
      summary: Get journey distance
      description: |
        Calculates the total distance of the journey by summing all segments between consecutive points.
      parameters:
        - name: journeyId
          in: path
          required: true
          description: The unique identifier of the journey
          schema:
            type: string
      responses:
        "200":
          description: Journey distance retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  journeyId:
                    type: string
                  distanceInMeters:
                    type: number
                    format: float
                example:
                  journeyId: "journey-456"
                  distanceInMeters: 12000.5
        "404":
          description: Journey not found

  /vehicles/{vehicleId}/summary:
    get:
      summary: Get total journey duration and distance for a vehicle
      description: |
        Retrieves the total duration and distance of all journeys taken by a specific vehicle.
      parameters:
        - name: vehicleId
          in: path
          required: true
          description: The unique identifier of the vehicle
          schema:
            type: string
      responses:
        "200":
          description: Total journey duration and distance retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicleId:
                    type: string
                  totalDurationInSeconds:
                    type: integer
                    description: Total duration of all journeys for the vehicle
                  totalDistanceInMeters:
                    type: number
                    format: float
                    description: Total distance of all journeys for the vehicle
                example:
                  vehicleId: "vehicle-123"
                  totalDurationInSeconds: 36000
                  totalDistanceInMeters: 150000.5
        "404":
          description: Vehicle not found or no journeys exist for the vehicle
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: "Vehicle not found or no journeys exist for this vehicle"
  /cleanup:
    post:
      summary: Clear the database
      description: |
        This endpoint is used to prepare the database for tests. It deletes all data in the database.
      responses:
        "200":
          description: Cleanup completed.

